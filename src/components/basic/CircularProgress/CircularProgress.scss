/********************************************************************************
 * Copyright (c) 2021, 2023 BMW Group AG
 * Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ********************************************************************************/

@import 'src/scss/global';

$loader-color: #ffa600 !default;
$loader-size: 16px !default;
$loader-animation-duration: 1s !default;

@function circle-normal($size) {
  @return round($size * 0.70710678118) + $size;
}

@mixin circularProgress(
  $size: $loader-size,
  $color: $loader-color,
  $duration: $loader-animation-duration,
  $align: null
) {
  $unique-name: unique-id();
  $dot-color: rgba($color, 0.05), rgba($color, 0.1), rgba($color, 0.2),
    rgba($color, 0.3), rgba($color, 0.4), rgba($color, 0.6), rgba($color, 0.8),
    rgba($color, 1);
  width: $size;
  height: $size;
  border-radius: 50%;
  position: relative;
  animation: #{'circularProgress-'}#{$unique-name} $duration linear infinite;

  @if ($align == null) {
    margin: $size;
  }

  @if ($align == center) {
    margin: 0 auto;
  }

  @if ($align == middle) {
    top: 50%;
    margin: 20px auto 0;
  }

  @keyframes #{'circularProgress-'}#{$unique-name} {
    0% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 1),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 2),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 3),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 4),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 5),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 6),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 7),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 8);
    }

    12.5% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 8),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 1),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 2),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 3),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 4),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 5),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 6),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 7);
    }

    25% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 7),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 8),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 1),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 2),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 3),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 4),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 5),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 6);
    }

    37.5% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 6),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 7),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 8),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 1),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 2),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 3),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 4),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 5);
    }

    50% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 5),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 6),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 7),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 8),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 1),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 2),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 3),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 4);
    }

    62.5% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 4),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 5),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 6),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 7),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 8),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 1),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 2),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 3);
    }

    75% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 3),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 4),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 5),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 6),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 7),
        // Bottom Lefts
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 8),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 1),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 2);
    }

    87.5% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 2),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 3),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 4),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 5),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 6),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 7),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 8),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 1);
    }

    100% {
      box-shadow: // Top
        0 (-circle-normal($size)) 0 0 nth($dot-color, 1),
        // Top Right
        circle-angle($size) (-circle-angle($size)) 0 0 nth($dot-color, 2),
        // Right
        circle-normal($size) 0 0 0 nth($dot-color, 3),
        // Bottom right
        circle-angle($size) circle-angle($size) 0 0 nth($dot-color, 4),
        // Bottom
        0 circle-normal($size) 0 0 nth($dot-color, 5),
        // Bottom Left
        (-circle-angle($size)) circle-angle($size) 0 0 nth($dot-color, 6),
        // Left
        (-circle-normal($size)) 0 0 0 nth($dot-color, 7),
        // Top left
        (-circle-angle($size)) (-circle-angle($size)) 0 0 nth($dot-color, 8);
    }
  }
}

@mixin loader-rotate {
  @keyframes loader-rotate {
    0% {
      transform: rotate(0);
    }

    100% {
      transform: rotate(360deg);
    }
  }
}

@mixin loader-scale {
  @keyframes loader-scale {
    0% {
      transform: scale(0);
      opacity: 0;
    }

    50% {
      opacity: 1;
    }

    100% {
      transform: scale(1);
      opacity: 0;
    }
  }
}

.circularProgress {
  @include circularProgress($size: 12px);
}
